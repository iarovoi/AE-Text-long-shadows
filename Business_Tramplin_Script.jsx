function buildGUI(thisObj){    thisObj.w = (thisObj instanceof Panel) ? thisObj : new Window("palette", "Whiteboard", undefined, {resizeable:true});    var MainGroup = thisObj.w.add("panel{text: '', justify: 'center', orientation: 'row', alignment:['left','top'], properties:{borderStyle: 'black'}}");    MainGroup.margins = [3,15,3,3];    var MainFunc = MainGroup.add("button",undefined, "CREATE MAGIC!");    MainFunc.preferredSize = [100,25];    MainFunc.onClick = function()        {            MainF();        }    if (thisObj.w instanceof Window)        {            thisObj.w.center();            thisObj.w.show();        }  else thisObj.w.layout.layout(true);}buildGUI(this);// Main Function -------------------------------------------------------------function MainF(){    app.beginUndoGroup("Magic");    try {        var proj = app.project;        var curItem = proj.activeItem;        var curLayers = curItem.selectedLayers;        var compLayers = curItem.layers;        for (var k = 0; k < curLayers.length; k++)        {          // Creating Pathes from layers          app.executeCommand(3781);           // Creating three other layers          curItem.layer(curLayers[k].name + " Outlines").copyToComp(curItem);          curItem.layer(curLayers[k].name + " Outlines").copyToComp(curItem);          // Renaming layers          curItem.layer(curLayers[k].name + " Outlines 2").name = "MainText " + curLayers[k].name;          curItem.layer(curLayers[k].name + " Outlines 3").name = "SideText " + curLayers[k].name;          curItem.layer(curLayers[k].name + " Outlines").name = "Shadow " + curLayers[k].name;          // Creating variables for each layer          var mainText = curItem.layer("MainText " + curLayers[0].name);          var shadowText = curItem.layer("Shadow " + curLayers[0].name);          var sideText = curItem.layer("SideText " + curLayers[0].name);          //Creating Adjustment Layer with effects          var adjLayer = compLayers.addSolid([1,0,0],"Controller " + curLayers[k].name,1920,1080,1,10);          adjLayer.adjustmentLayer = true;          adjLayer.Effects.addProperty("ADBE Slider Control").name = "Start Time";          adjLayer.Effects.property("Start Time").property("Slider").setValue(5);          adjLayer.Effects.addProperty("ADBE Slider Control").name = "In Time Delay";          adjLayer.Effects.property("In Time Delay").property("Slider").setValue(0.75);          adjLayer.Effects.addProperty("ADBE Color Control").name = "Main Color";          adjLayer.Effects.property("Main Color").property("Color").setValue([1,1,1]);          adjLayer.Effects.addProperty("ADBE Color Control").name = "Side Color";          adjLayer.Effects.property("Side Color").property("Color").setValue([65/255,89/255,146/255]);          adjLayer.Effects.addProperty("ADBE Slider Control").name = "Animation";          adjLayer.Effects.property("Animation")("Slider").addKey(0);          adjLayer.Effects.property("Animation")("Slider").addKey(1);          adjLayer.Effects.property("Animation")("Slider").setValueAtKey(1,0);          adjLayer.Effects.property("Animation")("Slider").setValueAtKey(2,40);          var easeInOne = new KeyframeEase(0,100/3);          var easeOutOne = new KeyframeEase(0,100/3);          var easeInTwo = new KeyframeEase(0,100);          var easeOutTwo = new KeyframeEase(0,100);          adjLayer.Effects.property("Animation")("Slider").setTemporalEaseAtKey(1,[easeInOne],[easeOutOne]);          adjLayer.Effects.property("Animation")("Slider").setTemporalEaseAtKey(2,[easeInTwo],[easeOutTwo]);          //Adding parenting          shadowText.parent = adjLayer;          sideText.parent = adjLayer;          mainText.parent = adjLayer;          // Creating names to use in expressions          nameOne = sideText.property("ADBE Root Vectors Group").property(1).name;          nameSideText = sideText.name;          nameAdjLayer = adjLayer.name;          //Adding position expression to adjustment layer          adjLayer.property("Transform").property("Position").expression = 'value - effect("Animation")("Slider").key(2)*thisComp.layer("'+ nameSideText +'").content("'+ nameOne +'").content("Repeater 1").transform.position/2';          // Adding repeaters and expressions layer groups          var groupsAmount = sideText.property("ADBE Root Vectors Group").numProperties;          for(var i = 1 ; i <= groupsAmount;i++)          {          // sideText layer          sideText.property("ADBE Root Vectors Group").property(i).property("Contents").addProperty("ADBE Vector Filter - Repeater");          sideText.property("ADBE Root Vectors Group").property(i).property("Contents").property("ADBE Vector Filter - Repeater")("ADBE Vector Repeater Transform")("ADBE Vector Repeater Position").setValue([1,-1]);          var expOpacity = '//\                            pIndex = thisProperty.propertyGroup(1).propertyGroup(1).propertyIndex;\                            //\                            repeaterCopies = thisComp.layer("' + nameSideText + '").content(pIndex).content("Repeater 1").copies;\                            \                            if (repeaterCopies < thisComp.layer("' + nameAdjLayer + '").effect("Start Time")("Slider"))\                            {\                             value = 0;\                            }\                            else\                            {\                              value;\                            }';          sideText.property("ADBE Root Vectors Group").property(i).property("Transform").property("Opacity").expression = expOpacity;          if (i == 1)          {            var expCopies = 'thisComp.layer("' + nameAdjLayer + '").effect("Animation")("Slider")';            sideText.property("ADBE Root Vectors Group").property(i).property("Contents").property("ADBE Vector Filter - Repeater")("ADBE Vector Repeater Copies").expression = expCopies;          }          else          {            var expCopies = '//\                            timeDelay = thisComp.layer("' + nameAdjLayer + '").effect("In Time Delay")("Slider");\                            //\                            pIndex = thisProperty.propertyGroup(1).propertyGroup(1).propertyGroup(1).propertyIndex;\                            //\                            animatedLayer = thisComp.layer("' + nameSideText + '").content(1).content("Repeater 1").copies;\                            \                            animatedLayer.valueAtTime(time - 0.1 * timeDelay * (pIndex-1));';            sideText.property("ADBE Root Vectors Group").property(i).property("Contents").property("ADBE Vector Filter - Repeater")("ADBE Vector Repeater Copies").expression = expCopies;          }          //mainText layer          mainText.property("ADBE Root Vectors Group").property(i).property("Transform").property("Opacity").expression = expOpacity;          var expPos = '//\                        pIndex = thisProperty.propertyGroup(1).propertyGroup(1).propertyIndex;\                        //\                        repeaterDir = thisComp.layer("' + nameSideText + '").content(pIndex).content("Repeater 1").transform.position;\                        //\                        repeaterCopies = thisComp.layer("' + nameSideText + '").content(pIndex).content("Repeater 1").copies;\                        \                        value + repeaterDir * repeaterCopies;';          mainText.property("ADBE Root Vectors Group").property(i).property("Transform").property("Position").expression = expPos;          //shadowText layer          shadowText.property("ADBE Root Vectors Group").property(i).property("Contents").addProperty("ADBE Vector Filter - Repeater");          shadowText.property("ADBE Root Vectors Group").property(i).property("Transform").property("Opacity").expression = expOpacity;          shadowText.property("Transform").property("Opacity").setValue(25);          var shadowPos = '//\                          pIndex = thisProperty.propertyGroup(1).propertyGroup(1).propertyIndex;\                          //\                          repeaterDir = thisComp.layer("' + nameSideText + '").content(pIndex).content("Repeater 1").transform.position;\                          \                          value = -1 * repeaterDir + 2/pIndex';          shadowText.property("ADBE Root Vectors Group").property(i).property("Contents").property("ADBE Vector Filter - Repeater")("ADBE Vector Repeater Transform")("ADBE Vector Repeater Position").expression = shadowPos;                    var shadowCopies = '//\                              pIndex = thisProperty.propertyGroup(1).propertyGroup(1).propertyGroup(1).propertyIndex;\                              //\                              repeaterCopies = thisComp.layer("' + nameSideText + '").content(pIndex).content("Repeater 1").copies;\                              \                              value = repeaterCopies * 2';          shadowText.property("ADBE Root Vectors Group").property(i).property("Contents").property("ADBE Vector Filter - Repeater")("ADBE Vector Repeater Copies").expression = shadowCopies;          }          // Adding Effects to controll colors          mainText.Effects.addProperty("ADBE Fill").property("Color").expression = 'thisComp.layer("' + nameAdjLayer + '").effect("Main Color")("Color")';          sideText.Effects.addProperty("ADBE Fill").property("Color").expression = 'thisComp.layer("' + nameAdjLayer + '").effect("Side Color")("Color")';          shadowText.Effects.addProperty("ADBE Fill").property("Color").setValue([64/255,64/255,64/255]);        }    }catch(err) {        alert("Error at line #" + err.line.toString() + "\r" + err.toString());    }    app.endUndoGroup();}